{"ast":null,"code":"var _jsxFileName = \"/Users/Brandon/Documents/-School/-SFSU/CSC_600_Programming_Paradigms_&_Languages/final-project-database-dragons/client/src/instruments/BeeSeeWhy_Saw.tsx\",\n    _s = $RefreshSig$();\n\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List, Range } from 'immutable';\nimport { Instrument } from '../Instruments';\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SawNote(_ref) {\n  _s();\n\n  let {\n    note,\n    octave,\n    synth,\n    minor,\n    index\n  } = _ref;\n  const [newSample] = useState(new Tone.Sampler({\n    urls: {\n      C5: \"musical-saw.wav\" //\n\n    }\n  }).toDestination());\n\n  const sawSample = note => {\n    newSample.triggerAttack(`${note}`);\n  };\n\n  const sawRelease = note => {\n    newSample.triggerRelease('+0.25');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseDown: () => sawSample(`${note}`),\n    onMouseUp: () => sawRelease('${note}'),\n    className: classNames('ba pointer absolute dim', {\n      // 'bg-black black h3': minor, // minor keys are black\n      'bg-black white h3': minor,\n      // minor keys are black\n      'black bg-white h4': !minor // major keys are white\n\n    }),\n    style: {\n      // CSS\n      top: 0,\n      left: `${index * 2}rem`,\n      zIndex: minor ? 1 : 0,\n      width: minor ? '1.5rem' : '2rem',\n      marginLeft: minor ? '0.25rem' : 0\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SawNote, \"Mw21Oly60+4AqLVYNuozjxXEyzk=\");\n\n_c = SawNote;\n\nfunction SawType(_ref2) {\n  let {\n    title,\n    onClick,\n    active\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onClick,\n    className: classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1', {\n      'b--black black': active,\n      'gray b--light-gray': !active\n    }),\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = SawType;\n\nfunction Saw(_ref3) {\n  let {\n    synth,\n    setSynth\n  } = _ref3;\n  const SawList = List([{\n    note: 'C',\n    idx: 0\n  }, {\n    note: 'Db',\n    idx: 0.5\n  }, {\n    note: 'D',\n    idx: 1\n  }, {\n    note: 'Eb',\n    idx: 1.5\n  }, {\n    note: 'E',\n    idx: 2\n  }, {\n    note: 'F',\n    idx: 3\n  }, {\n    note: 'Gb',\n    idx: 3.5\n  }, {\n    note: 'G',\n    idx: 4\n  }, {\n    note: 'Ab',\n    idx: 4.5\n  }, {\n    note: 'A',\n    idx: 5\n  }, {\n    note: 'Bb',\n    idx: 5.5\n  }, {\n    note: 'B',\n    idx: 6\n  }]);\n\n  const setOscillator = newType => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n      return new Tone.Synth({\n        oscillator: {\n          type: newType\n        }\n      }).toDestination();\n    });\n  };\n\n  const oscillators = List(['sine', 'sawtooth', 'square', 'triangle', 'fmsine', 'fmsawtooth', 'fmtriangle', 'amsine', 'amsawtooth', 'amtriangle']);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pv4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative dib h4  w-100 ml4\",\n      children: Range(2, 7).map(octave => SawList.map(key => {\n        const isMinor = key.note.indexOf('b') !== -1;\n        const note = `${key.note}${octave}`;\n        return /*#__PURE__*/_jsxDEV(SawNote, {\n          //react key\n          note: note,\n          synth: synth,\n          minor: isMinor,\n          octave: octave,\n          index: (octave - 2) * 7 + key.idx\n        }, note, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }, this);\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'pl4 pt4 flex',\n      children: oscillators.map(o => /*#__PURE__*/_jsxDEV(SawType, {\n        title: o,\n        onClick: () => setOscillator(o),\n        active: (synth === null || synth === void 0 ? void 0 : synth.oscillator.type) === o\n      }, o, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = Saw;\nexport const SawInstrument = new Instrument(\"BeeSeeWhy - Saw\", Saw);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SawNote\");\n$RefreshReg$(_c2, \"SawType\");\n$RefreshReg$(_c3, \"Saw\");","map":{"version":3,"names":["Tone","classNames","List","Range","Instrument","React","useState","SawNote","note","octave","synth","minor","index","newSample","Sampler","urls","C5","toDestination","sawSample","triggerAttack","sawRelease","triggerRelease","top","left","zIndex","width","marginLeft","SawType","title","onClick","active","Saw","setSynth","SawList","idx","setOscillator","newType","oldSynth","disconnect","Synth","oscillator","type","oscillators","map","key","isMinor","indexOf","o","SawInstrument"],"sources":["/Users/Brandon/Documents/-School/-SFSU/CSC_600_Programming_Paradigms_&_Languages/final-project-database-dragons/client/src/instruments/BeeSeeWhy_Saw.tsx"],"sourcesContent":["import * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List, Range } from 'immutable';\nimport { Instrument, InstrumentProps } from '../Instruments';\nimport React from 'react'\nimport { useState } from 'react'; \n\ninterface SawNoteProps {\n    note: string; // C, Db, D, Eb, E, F, Gb, G, Ab, A, Bb, B\n    duration?: string;\n    synth?: Tone.Synth; // Contains library code for making sound\n    minor?: boolean; // True if minor key, false if major key\n    octave: number;\n    index: number;\n}\n\nexport function SawNote({ \n                              note,\n                              octave,\n                              synth,\n                              minor,\n                              index,}: SawNoteProps): JSX.Element {\n                                const [newSample] = useState(\n                                    new Tone.Sampler({\n                                      urls:{\n                                        C5: \"musical-saw.wav\", //\n                                      },\n                                    }).toDestination()\n                                  );\n                                    \n                                  const sawSample = (note: string) => {\n                                    newSample.triggerAttack(`${note}`);\n                                  };\n\n                                  const sawRelease = (note: string) => {\n                                    newSample.triggerRelease('+0.25');\n                                  }\n    return (\n        <div\n            onMouseDown={() => sawSample(`${note}`)} \n            onMouseUp={() => sawRelease('${note}')}\n            className={classNames('ba pointer absolute dim', {\n                // 'bg-black black h3': minor, // minor keys are black\n                'bg-black white h3': minor, // minor keys are black\n                'black bg-white h4': !minor, // major keys are white\n              })}\n              style={{\n                // CSS\n                top: 0,\n                left: `${index * 2}rem`,\n                zIndex: minor ? 1 : 0,\n                width: minor ? '1.5rem' : '2rem',\n                marginLeft: minor ? '0.25rem' : 0,\n              }}\n            ></div>\n    );\n}\n\n\nfunction SawType({ title, onClick,active }: any): JSX.Element {\n    return (\n        <div\n            onClick={onClick}\n            className={classNames('dim pointer ph2 pv1 ba mr2 br1 fw7 bw1', {\n                'b--black black': active,\n                'gray b--light-gray': !active,})}\n        >\n            {title}\n        </div>\n    );\n}\n\nfunction Saw({ synth, setSynth }: InstrumentProps): JSX.Element {\n    const SawList = List([\n        { note: 'C', idx: 0},\n        { note: 'Db', idx: 0.5},\n        { note: 'D', idx: 1},\n        { note: 'Eb', idx: 1.5},\n        { note: 'E', idx: 2 },\n        { note: 'F', idx: 3},\n        { note: 'Gb', idx: 3.5},\n        { note: 'G', idx: 4},\n        { note: 'Ab', idx: 4.5},\n        { note: 'A', idx: 5},\n        { note: 'Bb', idx: 5.5},\n        { note: 'B', idx: 6}\n    ]);\n\n    const setOscillator = (newType: Tone.ToneOscillatorType) => {\n        setSynth(oldSynth => {\n            oldSynth.disconnect();\n            return new Tone.Synth({\n                oscillator: { type: newType } as Tone.OmniOscillatorOptions,\n                \n            }).toDestination();\n        });\n    };\n\n    const oscillators: List<OscillatorType> = List([\n        'sine',\n        'sawtooth',\n        'square',\n        'triangle',\n        'fmsine',\n        'fmsawtooth',\n        'fmtriangle',\n        'amsine',\n        'amsawtooth',\n        'amtriangle',\n    ]) as List<OscillatorType>;\n\n    return (\n        <div className=\"pv4\">\n            <div className=\"relative dib h4  w-100 ml4\">\n                {Range(2, 7).map(octave =>\n                    SawList.map(key => {\n                        const isMinor = key.note.indexOf('b') !== -1;\n                        const note = `${key.note}${octave}`;\n                        return (\n                            <SawNote\n                                key={note} //react key\n                                note={note}\n                                synth={synth}\n                                minor={isMinor}\n                                octave={octave}\n                                index={(octave - 2) * 7 + key.idx}\n                            />\n                        );\n                    }),\n                )}\n\n            </div>\n            <div className={'pl4 pt4 flex'}>\n                {oscillators.map(o => (\n                    <SawType\n                        key={o}\n                        title={o}\n                        onClick={() => setOscillator(o)}\n                        active={synth?.oscillator.type === o}\n                    />\n        ))}\n      </div>\n        \n        </div>\n    );\n}\n\n\n\nexport const SawInstrument = new Instrument(\"BeeSeeWhy - Saw\", Saw);"],"mappings":"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"},"metadata":{},"sourceType":"module"}